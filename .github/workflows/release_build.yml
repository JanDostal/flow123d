name: Build release package
# Build official release installation packages on the Jenkins.

#on:
  #release:
    #types: [created, published, edited, released]

#on:
#  push:
#    tags:
#    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

on:
  push

# TODO: add to manual reference to web generated doc and mention that one should trust the generated part 

# článek Martin

# 

env:
  DOCKER_USER: ${{secrets.DOCKER_HUB_FLOW123D_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_HUB_FLOW123D_TOKEN}}
  environment: gnu
  build_type: release
  build_container: contgnurelease
  FLOW: /opt/flow123d/flow123d
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Docker Hub login
      id: vars
      #uses: docker/login-action@v1  
      # docker/* provides various actions provided by docker, but that requires learning their approach of CI/CD
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
        echo "Variables summary"
        echo build_container: \"${build_container}\"
        echo release_version: \"${release_version}\"
        echo environment: \"${environment}\"
        echo imagesversion: \"${imagesversion}\"
        
        echo "::set-output name=pubdir::publish_${environment}"    
        echo "::set-output name=relver::${release_version}"    

        

    - name: Build
      run: |
        # docker rm -f  || echo "container not running"
        bin/fterm update
        bin/fterm rel_$environment -- --privileged -di --name ${build_container} --volume $(pwd):$FLOW
        #  --volume /home/builder/git-cache/flow123d.git:/home/builder/git-cache/flow123d.git \
        
        # copy config
        docker exec ${build_container} ls $FLOW
        docker exec ${build_container} cp $FLOW/config/config-jenkins-docker-${build_type}.cmake $FLOW/config.cmake

        # configure and compile
        docker exec ${build_container} git config --global --add safe.directory $FLOW
        docker exec ${build_container} git config --global --add safe.directory $FLOW/bin/yaml_converter
        docker exec ${build_container} git config --global --add safe.directory $FLOW/src/dealii
        
        docker exec ${build_container} git config --global --add safe.directory $FLOW/third_party/bparser
        docker exec ${build_container} git config --global --add safe.directory $FLOW/third_party/json-3.10.5
        docker exec ${build_container} git config --global --add safe.directory $FLOW/third_party/gtest-1.10.0
        docker exec ${build_container} make -C $FLOW -j4 all
    - name: make doc
      run: |
        docker exec ${build_container} make -C ${FLOW} FORCE_DOC_UPDATE=1 ref-doc
        docker exec ${build_container} make -C ${FLOW} html-doc
        docker exec ${build_container} make -C ${FLOW} doxy-doc

    - name: package
      run: |        
        echo "Processing IP address"
        curl http://ifconfig.me

        destination=$(pwd)/publish_${environment}
        imagesversion=$(cat $(pwd)/config/docker/image_tag)
        release_version=$(cat $(pwd)/version)      
        git clone -b v${imagesversion} https://github.com/flow123d/docker-config.git
        make -C docker-config/package \
              container_name=${build_container} \
              install_image="install-${environment}:${imagesversion}" \
              target_image=flow123d-${environment} \
              image_tag=${release_version} \
              destination=${destination} \
              all
        make -C docker-config/package \
              container_name=${build_container} \
              target_image=flow123d-${environment} \
              image_tag=${release_version} \
              destination=${destination} \
              remove-unwanted
        make -C docker-config/package \
              container_name=${build_container} \
              target_image=flow123d-${environment} \
              destination=${destination} \
              push-to-hub
        
        ls -l
        ls -l publish_${environment}

        echo ${{ steps.vars.outputs.pubdir }}    
        echo ${{ steps.vars.outputs.relver }}    


        
              
#    - name: Release
#      uses: softprops/action-gh-release@v1
#      with:
#          files: |
#            flow123d_${release_version}_doc.pdf
#            flow123d_${release_version}_linux_install.tar.gz
#            flow123d_${release_version}_windows_install.exe
 #         name: release_${release_version}
    - name: Get variables
    - name: SSH
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.PUBLISH_HOST }}
        username: ${{ secrets.PUBLISH_USER }}
        #key: ${{ secrets.PUBLISH_KEY }}
        password: ${{ secrets.PUBLISH_PASS }}
        #passphrase: ${{ secrets.PUBLISH_PASSPHRASE }}
        port: 22
        #source: "publish_${environment}/doxygen, 
                 #publish_${environment}/flow123d_3.9.0_doc.pdf,
                 #publish_${environment}/flow123d_3.9.0_linux_install.json,
                 #publish_${environment}/flow123d_3.9.0_linux_install.tar.gz,
                 #publish_${environment}/flow123d_3.9.0_windows_install.exe,
                 #publish_${environment}/flow123d_3.9.0_windows_install.json,
                 #publish_${environment}/htmldoc,
                 #publish_${environment}/imagename"
        source: "${{ steps.vars.outputs.pubdir }}/flow123d_3.9.0_windows_install.exe"
        target: "~/packages/${{ steps.vars.outputs.relver }}"
        #strip_components: 1
        
        
      #ls -la $destination

#publishers:
  #- cifs:
      #site: 'flow123d.at.public'
      #target: '/docker-images/${{DOCKER_IMAGE_NAME}}_{environment}/'
      #source: publish_{environment}/**/*
      #remove-prefix: publish_{environment}/

#Jenkins prop.file
  #- inject:
      #script-content: |
        #rm -f prop.file && touch prop.file
        #echo "BUILD_NAME=${{BRANCH_NAME#origin/}}@${{GIT_COMMIT:0:6}}"          >> prop.file
        #echo "DOCKER_IMAGE_NAME=${{BRANCH_NAME#origin/}}-${{GIT_COMMIT:0:6}}"   >> prop.file
        #echo "_GIT_BRANCH=${{BRANCH_NAME#origin/}}"                             >> prop.file
#Jenkins Build
  #- inject:
      #properties-file: prop.file
  #- shell: |
      #start image
      #docker rm -f cont{environment}{build_type} || echo "container not running"
      #flow123d/bin/fterm update
      #flow123d/bin/fterm rel_{environment} -- \
          #--privileged -di \
          #--name cont{environment}{build_type} \
          #--volume /home/builder/git-cache/flow123d.git:/home/builder/git-cache/flow123d.git \
          #--volume ${{WORKSPACE}}/docker:${{FLOW}}

      #delete old build
      #docker exec cont{environment}{build_type} bash -c "rm -rf ${{FLOW}}/{{*,.*}}" || true

      # setup local reference repository for faster cloning
      #docker exec cont{environment}{build_type} git clone --reference /home/builder/git-cache/flow123d.git -b ${{_GIT_BRANCH}} https://github.com/flow123d/flow123d.git ${{FLOW}}
      #copy config
      #docker exec cont{environment}{build_type} cp ${{FLOW}}/config/config-jenkins-docker-{build_type}.cmake ${{FLOW}}/config.cmake

      #configure and compile
      #docker exec cont{environment}{build_type} make -C ${{FLOW}} -j4 all
      #docker exec cont{environment}{build_type} make -C ${{FLOW}}/build_tree/unit_tests -j4 gtest_mpi_obj
#Jenkins make doc
  #- shell: |
      #docker exec cont{environment}{build_type} make -C ${{FLOW}} FORCE_DOC_UPDATE=1 ref-doc
      #docker exec cont{environment}{build_type} make -C ${{FLOW}} html-doc
      #docker exec cont{environment}{build_type} make -C ${{FLOW}} doxy-doc

#Jenkins package and upload
  #- inject:
      #properties-file: prop.file
  #- shell: |
      #destination=$(pwd)/publish_{environment}
      
      #imagesversion=$(cat flow123d/config/docker/image_tag)
      
      #rm -rf $destination && mkdir -p $destination
      #rm -rf docker-config
      #git clone https://github.com/flow123d/docker-config.git

      #make -C docker-config/package \
              #container_name=cont{environment}{build_type} \
              #install_image="install-{environment}:$imagesversion" \
              #target_image=ci-{environment} \
              #destination=$destination \
              #all

      #make -C docker-config/package \
              #container_name=cont{environment}{build_type} \
              #target_image=ci-{environment} \
              #destination=$destination \
              #remove-unwanted

      #make -C docker-config/package \
              #container_name=cont{environment}{build_type} \
              #target_image=ci-{environment} \
              #push-to-hub

      #ls -la $destination

#publishers:
  #- cifs:
      #site: 'flow123d.at.public'
      #target: '/docker-images/${{DOCKER_IMAGE_NAME}}_{environment}/'
      #source: publish_{environment}/**/*
      #remove-prefix: publish_{environment}/
